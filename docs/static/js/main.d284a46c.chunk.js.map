{"version":3,"sources":["Components/CategoryAdd.js","helpers/getGif.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfrB,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,QAc+CG,YAAY,sB,+BCtB7EC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEiCC,UAAUH,GAF3C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QAVrB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGnB,sBAAKgB,UAAU,yCAAf,UACI,4BAAIN,IACJ,qBAAKO,IAAKjB,EAAKkB,IAAKR,QCJnBS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDZ,SAACA,GAAa,IAAD,EACVf,mBAAS,CAC/BsB,KAAM,GACNe,SAAQ,IAHwB,mBAC7BC,EAD6B,KACtBC,EADsB,KAmBpC,OAZAC,qBAAU,WAEN1B,EAAQC,GAAU0B,MAAK,SAAAC,GAEnBH,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,SAIjB,IAEIC,EDdwBK,CAAY5B,GAA/Ba,EAJuB,EAI5BN,KAAae,EAJe,EAIfA,QASpB,OACI,sBAAKJ,UAAU,YAAf,UACG,oBAAIA,UAAU,oCAAd,SAAmDlB,IAClDsB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEHL,EAAOJ,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,WElB/CkB,EAAe,WAAM,MAIM5C,mBAAS,CAAC,cAJhB,mBAIvB6C,EAJuB,KAIX9C,EAJW,KAW9B,OACI,qCACG,iDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ8C,EAAWrB,KAAI,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCjB5D+B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.d284a46c.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CategoryAdd = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputValue = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        // console.log('Submit Hecho!');\r\n        if (inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type='text' value={inputValue} onChange={handleInputValue} placeholder='Busca un gif!!'></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}","export const getGifs = async (category) =>{\r\n        \r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=VG8eJQQYBImkVdvkXP0XnRZKMvZ0cpc2`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    console.log(id, title, url);\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <p>{title}</p>\r\n            <img src={url} alt={title}></img>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGif';\r\n// import { getGifs } from '../helpers/getGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    // const [images, setImages] = useState([]);\r\n\r\n    const {data:images, loading} = useFetchGif(category);\r\n\r\n\r\n    // useEffect( () =>{\r\n    //     getGifs(category).then(imgs => setImages(imgs))\r\n    // }, [category]);\r\n\r\n\r\n\r\n    return (\r\n        <div className='card-grid'>\r\n           <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n           {loading && <p className='animate__animated animate__flash'>Cargando...</p>}\r\n                {\r\n                    images.map(img => <GifGridItem key={img.id} {...img} />)\r\n                }\r\n        </div>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGif';\r\n\r\n\r\nexport const useFetchGif = (category) =>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading:true\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs(category).then(imgs => {\r\n            \r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n            })\r\n            \r\n        })\r\n    }, [])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport { CategoryAdd } from './Components/CategoryAdd';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    // const categories = ['One Punch Man', 'Jujutsu Kaisen', 'Attack on Titan'];\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     setCategories([...categories, 'Kimetsu no Yaiba']);\r\n    // }\r\n    \r\n\r\n    return (\r\n        <>\r\n           <h2>GIF'S Experts!!</h2>\r\n           <CategoryAdd setCategories={setCategories}/>\r\n           <hr/>\r\n           <ol>\r\n               {\r\n                   categories.map(category => <GifGrid key={category} category={category}/>)\r\n               }\r\n           </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport {GifExpertApp} from './GifExpertApp'\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(<GifExpertApp />, document.getElementById('root'))"],"sourceRoot":""}